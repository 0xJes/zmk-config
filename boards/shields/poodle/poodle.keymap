/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <16 17>;
        };

        bsp {
            bindings = <&kp BACKSPACE>;
            key-positions = <17 18>;
        };

        ret {
            bindings = <&kp RET>;
            key-positions = <12 11>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <11 13>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <18 9>;
        };

        plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <15 5>;
        };

        grv {
            bindings = <&kp GRAVE>;
            key-positions = <14 4>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <6 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp C  &kp B           &kp H        &kp G      &kp K             &kp DOT          &kp COMMA  &kp FSLH     &kp J       &kp M
&kp P  &mt LEFT_ALT S  &mt LCTRL N  &lt 1 T    &kp V             &kp MINUS        &lt 2 A    &mt RCTRL E  &mt LALT I  &kp W
       &kp F           &kp L        &kp D                                         &kp U      &kp O        &kp Y
                                    &sk LSHFT  &mt R RA(APOS)    &mt RMETA SPACE  &sk RSHFT
            >;
        };

        nav {
            bindings = <
&none  &none         &none      &none           &trans    &kp LC(KP_PLUS)      &kp LC(C)  &kp LC(V)       &kp LC(X)     &kp RIGHT
&none  &kp LEFT_ALT  &kp LCTRL  &none           &none     &kp LC(KP_SUBTRACT)  &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW  &kp END
       &none         &none      &none                                          &kp HOME   &kp PAGE_DOWN   &kp PG_UP
                                &kp LEFT_SHIFT  &none     &kp LC(Z)            &kp LC(Y)
            >;
        };

        num {
            bindings = <
&kp KP_NUMBER_3  &none            &none            &none            &none              &none            &none      &trans      &none      &none
&kp KP_NUMBER_7  &kp KP_N2        &kp KP_NUMBER_1  &kp KP_NUMBER_0  &none              &none            &none      &kp PERIOD  &kp COMMA  &none
                 &kp KP_NUMBER_6  &kp KP_NUMBER_5  &kp KP_NUMBER_4                                      &none      &none       &none
                                                   &kp MINUS        &kp KP_NUMBER_8    &kp KP_NUMBER_9  &kp SPACE
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &mkp MB5
        &trans  &trans  &trans                      &mkp MB4  &trans  &trans
                        &trans  &trans    &mkp MB1  &mkp MB2
            >;
        };
    };
};
