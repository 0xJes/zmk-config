/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        bsp {
            bindings = <&kp BACKSPACE>;
            key-positions = <13 14>;
        };

        ret {
            bindings = <&kp RET>;
            key-positions = <7 8>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <10 12>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <7 9>;
        };

        plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <11 21>;
        };

        grv {
            bindings = <&kp GRAVE>;
            key-positions = <10 20>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
          &kp B           &kp H        &kp G                                      &kp COMMA  &kp FSLH     &kp J      
&kp C      &mt LEFT_ALT S  &mt LCTRL N  &lt 1 T    &kp K            &kp DOT        &lt 2 A    &mt RCTRL E  &mt LALT I   &kp M
&kp P      &kp F           &kp L        &kp D      &kp V              &kp MINUS    &kp U      &kp O        &kp Y &kp W
                                    &sk LSHFT  &kp R   &mt RMETA SPACE  &sk RSHFT
            >;
        };

        nav {
            bindings = <
       &none         &none      &none                                      &kp LC(C)  &kp LC(V)       &kp LC(X)     
&none  &kp LEFT_ALT  &kp LCTRL  &none           &none     &kp LC(KP_PLUS)  &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT
&none  &none         &none      &none           &trans    &kp LC(KP_SUBTRACT)                           &kp HOME   &kp PAGE_DOWN   &kp PG_UP &kp END
                                &kp LEFT_SHIFT  &none     &kp LC(Z)            &kp LC(Y)
            >;
        };

        num {
            bindings = <
                  &none            &none            &none                   &none              &none            &none      
&kp KP_NUMBER_3   &kp KP_N2        &kp KP_NUMBER_1  &kp KP_NUMBER_0  &none              &none            &none      &kp PERIOD  &kp COMMA  &none
&kp KP_NUMBER_7   &kp KP_NUMBER_6  &kp KP_NUMBER_5  &kp KP_NUMBER_4   &none      &none       &none &none       &none &none
                                                   &kp MINUS        &kp KP_NUMBER_8    &kp KP_NUMBER_9  &kp SPACE
            >;
        };

        mouse {
            bindings = <
  &trans  &trans  &trans  &trans    &trans    &trans  
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &mkp MB5
&trans        &trans  &trans  &trans   &trans       &trans            &mkp MB4  &trans  &trans &mkp MB5
                        &trans  &trans    &mkp MB1  &mkp MB2
            >;
        };
    };
};
